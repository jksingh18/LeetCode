[
  {
    "id": 124,
    "title": "Binary Tree Maximum Path Sum",
    "title_slug": "binary-tree-maximum-path-sum",
    "difficulty": "Hard",
    "skills": [
      "Binary Tree",
      "Depth-First Search",
      "Dynamic Programming",
      "Tree"
    ]
  },
  {
    "id": 206,
    "title": "Reverse Linked List",
    "title_slug": "reverse-linked-list",
    "difficulty": "Easy",
    "skills": [
      "Linked List",
      "Recursion"
    ]
  },
  {
    "id": 232,
    "title": "Implement Queue using Stacks",
    "title_slug": "implement-queue-using-stacks",
    "difficulty": "Easy",
    "skills": [
      "Design",
      "Queue",
      "Stack"
    ]
  },
  {
    "id": 234,
    "title": "Palindrome Linked List",
    "title_slug": "palindrome-linked-list",
    "difficulty": "Easy",
    "skills": [
      "Linked List",
      "Recursion",
      "Stack",
      "Two Pointers"
    ]
  },
  {
    "id": 637,
    "title": "Average of Levels in Binary Tree",
    "title_slug": "average-of-levels-in-binary-tree",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Breadth-First Search",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 872,
    "title": "Leaf-Similar Trees",
    "title_slug": "leaf-similar-trees",
    "difficulty": "Easy",
    "skills": [
      "Binary Tree",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 938,
    "title": "Range Sum of BST",
    "title_slug": "range-sum-of-bst",
    "difficulty": "Easy",
    "skills": [
      "Binary Search Tree",
      "Binary Tree",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 944,
    "title": "Delete Columns to Make Sorted",
    "title_slug": "delete-columns-to-make-sorted",
    "difficulty": "Easy",
    "skills": [
      "Array",
      "String"
    ]
  },
  {
    "id": 1026,
    "title": "Maximum Difference Between Node and Ancestor",
    "title_slug": "maximum-difference-between-node-and-ancestor",
    "difficulty": "Medium",
    "skills": [
      "Binary Tree",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 1071,
    "title": "Greatest Common Divisor of Strings",
    "title_slug": "greatest-common-divisor-of-strings",
    "difficulty": "Easy",
    "skills": [
      "Math",
      "String"
    ]
  },
  {
    "id": 1143,
    "title": "Longest Common Subsequence",
    "title_slug": "longest-common-subsequence",
    "difficulty": "Medium",
    "skills": [
      "Dynamic Programming",
      "String"
    ]
  },
  {
    "id": 1448,
    "title": "Count Good Nodes in Binary Tree",
    "title_slug": "count-good-nodes-in-binary-tree",
    "difficulty": "Medium",
    "skills": [
      "Binary Tree",
      "Breadth-First Search",
      "Depth-First Search",
      "Tree"
    ]
  },
  {
    "id": 2337,
    "title": "Move Pieces to Obtain a String",
    "title_slug": "move-pieces-to-obtain-a-string",
    "difficulty": "Medium",
    "skills": [
      "String",
      "Two Pointers"
    ]
  }
]